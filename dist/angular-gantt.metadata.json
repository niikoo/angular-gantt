{"__symbolic":"module","version":4,"metadata":{"GanttModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":16,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":18,"character":4}],"declarations":[{"__symbolic":"reference","name":"GanttComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"GanttComponent"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"GroupByPipe"}],"exports":[{"__symbolic":"reference","name":"GanttComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"GroupByPipe"}]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"GanttModule"},"providers":[{"__symbolic":"reference","name":"GanttService"}]}}}},"GanttComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"gantt-component","template":"<div class=\"gantt-container-holder\"> <div class=\"gantt-container\" (window:resize)=\"onResize($event)\"> <gantt-header [name]=\"_project.name\" [startDate]=\"_project.startDate\"></gantt-header> <gantt-activity [project]=\"_project\" [options]=\"options\" (onGridRowClick)=\"gridRowClicked($event)\"></gantt-activity> <gantt-footer [project]=\"_project\"></gantt-footer> </div> </div> ","styles":[".gantt-container-holder { width: 100%; position: relative; } .gantt-container { font-family: Arial, serif; font-size: 13px; border: 1px solid #cecece; position: relative; white-space: nowrap; margin-top: 0; } "]}]}],"members":{"project":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"onGridRowClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":58,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"GanttService"},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":64,"character":28}]}],"ngOnInit":[{"__symbolic":"method"}],"setSizes":[{"__symbolic":"method"}],"scaleToTasks":[{"__symbolic":"method"}],"setDefaultProject":[{"__symbolic":"method"}],"gridRowClicked":[{"__symbolic":"method"}],"onResize":[{"__symbolic":"method"}]}},"GroupByPipe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":2,"character":1},"arguments":[{"name":"groupBy"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"GanttService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":5,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"calculateBarWidth":[{"__symbolic":"method"}],"calculateBarLeft":[{"__symbolic":"method"}],"calculateGanttHeight":[{"__symbolic":"method"}],"calculateBarLeftDelta":[{"__symbolic":"method"}],"isParent":[{"__symbolic":"method"}],"isChild":[{"__symbolic":"method"}],"calculateBar":[{"__symbolic":"method"}],"getBarStyle":[{"__symbolic":"method"}],"getBarProgressStyle":[{"__symbolic":"method"}],"calculateBarProgress":[{"__symbolic":"method"}],"calculateDiffDays":[{"__symbolic":"method"}],"calculateDuration":[{"__symbolic":"method"}],"calculateTotalDuration":[{"__symbolic":"method"}],"calculateTotalPercentage":[{"__symbolic":"method"}],"calculateParentTotalPercentage":[{"__symbolic":"method"}],"calculateScale":[{"__symbolic":"method"}],"isDayWeekend":[{"__symbolic":"method"}],"addDays":[{"__symbolic":"method"}],"removeDays":[{"__symbolic":"method"}],"calculateGridScale":[{"__symbolic":"method"}],"getHours":[{"__symbolic":"method"}],"getComputedStyle":[{"__symbolic":"method"}],"calculateContainerWidth":[{"__symbolic":"method"}],"calculateActivityContainerDimensions":[{"__symbolic":"method"}],"scrollTop":[{"__symbolic":"method"}],"groupData":[{"__symbolic":"method"}],"transformData":[{"__symbolic":"method"}],"doTaskCheck":[{"__symbolic":"method"}],"setIdPrefix":[{"__symbolic":"method"}],"setScrollTop":[{"__symbolic":"method"}]}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"gantt-activity","template":"<div class=\"actions_bar\"> <div style=\"float:right\"> <!--<label> <button (click)=\"zoomTasks('hours')\" class=\"btn btn-info\">Hour</button> </label> <label> <button (click)=\"zoomTasks('days')\" class=\"btn btn-info\">Day</button> </label>--> <button (click)=\"expand()\" style=\"background-color:whitesmoke; border:none; font-size:21px; cursor:pointer\" [innerHTML]=\"activityActions.expandedIcon\"></button> </div> </div> <div class=\"grid\" #ganttGrid [ngStyle]=\"{ 'height': ganttActivityHeight, 'width': ganttService.gridWidth + 'px'}\"> <div class=\"grid_scale\" [ngStyle]=\"setGridScaleStyle()\"> <div class=\"grid_head_cell\" *ngFor=\"let column of gridColumns\" [style.width]=\"column.width + 'px'\" [style.left]=\"column.left + 'px'\"> <label>{{column.name}} <span *ngIf=\"column.name === 'Duration'\" style=\"font-weight:bold\">{{ ganttService.calculateTotalDuration(ganttService.TASK_CACHE) }}</span></label> </div> <div class=\"grid_head_cell\"> <button (click)=\"toggleAllChildren()\" style=\"background-color:whitesmoke; border:none; font-size:21px; cursor:pointer\">{{ treeExpanded ? '&#x25b2;' : '&#x25bc;' }}</button> </div> </div> <div class=\"grid_data\" #ganttGridData [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() }\"> <div #row *ngFor=\"let data of ganttService.groupData(ganttService.TASK_CACHE)\" (click)=\"toggleChildren(row, data)\" class=\"grid_row\" [ngStyle]=\"setGridRowStyle(ganttService.isParent(data.treePath))\" [attr.data-id]=\"ganttService.setIdPrefix(data.id)\" [attr.data-isParent]=\"ganttService.isParent(data.treePath)\" [attr.data-parentid]=\"ganttService.setIdPrefix(data.parentId)\"> <div class=\"grid_cell\" [ngStyle]=\"{ 'width': gridColumns[0].width + 'px' }\"> <div [innerHTML]=\"getStatusIcon(data.status, data.percentComplete)\" [style.color]=\"getStatusIconColor(data.status, data.percentComplete)\"></div> </div> <div class=\"grid_cell\" [ngStyle]=\" { 'width': gridColumns[1].width + 'px', 'padding-left': ganttService.isChild(data.treePath) }\"> <div class=\"gantt_tree_content\">{{data.name}}</div> </div> <div class=\"grid_cell\" [ngStyle]=\"{ 'width': gridColumns[2].width + 'px' }\"> <!--<div>{{ ganttService.isParent(data.treePath) === true ? ganttService.calculateParentTotalPercentage(data, project.tasks) : data.percentComplete }}</div>--> <div>{{ data.percentComplete }}</div> </div> <div class=\"grid_cell\" [ngStyle]=\"{ 'width': gridColumns[3].width + 'px'}\"> <div> {{ ganttService.calculateDuration(data) }}</div> </div> </div> </div> </div><div class=\"gantt_activity\" (window:resize)=\"onResize($event)\" [ngStyle]=\"{ 'height': ganttActivityHeight, 'width': ganttActivityWidth - 18 + 'px'}\"> <gantt-time-scale [zoom]=\"zoom\" [zoomLevel]=\"zoomLevel\" [timeScale]=\"ganttService.TIME_SCALE\" [dimensions]=\"dimensions\"></gantt-time-scale> <div class=\"gantt_activity_area\" #ganttActivityArea [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight(), 'width': containerWidth + 'px'}\"> <gantt-activity-background [zoom]=\"zoom\" [zoomLevel]=\"zoomLevel\" [timeScale]=\"ganttService.TIME_SCALE\" [tasks]=\"ganttService.TASK_CACHE\"></gantt-activity-background> <gantt-activity-bars [zoom]=\"zoom\" [zoomLevel]=\"zoomLevel\" [timeScale]=\"ganttService.TIME_SCALE\" [dimensions]=\"dimensions\" [tasks]=\"ganttService.TASK_CACHE\"></gantt-activity-bars> </div> </div> <div class=\"gantt_vertical_scroll\" #verticalScroll (scroll)=\"onVerticalScroll(verticalScroll, ganttGrid, ganttActivityArea)\" [ngStyle]=\"{'display': activityActions.expanded === true ? 'none' : 'block' }\"> <div [ngStyle]=\"{ 'height': ganttService.calculateGanttHeight() }\"></div> </div> ","styles":["/* You can add global styles to this file, and also import other style files */ .gantt_activity { /*overflow-x: hidden;*/ height: 250px; overflow-y: hidden; overflow-x: scroll; display: inline-block; vertical-align: top; position: relative; } .gantt_activity_area { position: relative; overflow-x: hidden; overflow-y: hidden; -webkit-user-select: none; } .gantt_vertical_scroll { background-color: transparent; overflow-x: hidden; overflow-y: scroll; position: absolute; right: 0; display: block; height: 283px; width: 18px; top: 70px; } .grid { overflow-x: hidden; overflow-y: hidden; display: inline-block; vertical-align: top; border-right: 1px solid #cecece; } .grid_scale { color: #6b6b6b; font-size: 12px; border-bottom: 1px solid #e0e0e0; background-color: whitesmoke; } .grid_head_cell { /*color: #a6a6a6;*/ border-top: none !important; border-right: none !important; line-height: inherit; box-sizing: border-box; display: inline-block; vertical-align: top; border-right: 1px solid #cecece; /*text-align: center;*/ position: relative; cursor: default; height: 100%; -moz-user-select: -moz-none; -webkit-user-select: none; overflow: hidden; } .grid_data { overflow: hidden; } .grid_row { box-sizing: border-box; border-bottom: 1px solid #e0e0e0; background-color: #fff; position: relative; -webkit-user-select: none; } .grid_row:hover { background-color: #eeeeee; } .grid_cell { border-right: none; color: #454545; display: inline-block; vertical-align: top; padding-left: 6px; padding-right: 6px; height: 100%; overflow: hidden; white-space: nowrap; font-size: 13px; box-sizing: border-box; } .actions_bar { /*border-top: 1px solid #cecece;*/ border-bottom: 1px solid #e0e0e0; clear: both; /*margin-top: 90px;*/ height: 28px; background: whitesmoke; color: #494949; font-family: Arial, sans-serif; font-size: 13px; padding-left: 15px; line-height: 25px; } .gantt_tree_content { padding-left: 15px; } "],"changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":9,"character":19},"member":"Default"}}]}],"members":{"project":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"onGridRowClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":28,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"GanttService"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngDoCheck":[{"__symbolic":"method"}],"onVerticalScroll":[{"__symbolic":"method"}],"toggleChildren":[{"__symbolic":"method"}],"toggleAllChildren":[{"__symbolic":"method"}],"onResize":[{"__symbolic":"method"}],"setScale":[{"__symbolic":"method"}],"setDimensions":[{"__symbolic":"method"}],"setGridRowStyle":[{"__symbolic":"method"}],"zoomTasks":[{"__symbolic":"method"}],"expand":[{"__symbolic":"method"}],"getStatusIcon":[{"__symbolic":"method"}],"getStatusIconColor":[{"__symbolic":"method"}],"setGridScaleStyle":[{"__symbolic":"method"}],"calculateContainerHeight":[{"__symbolic":"method"}],"calculateContainerWidth":[{"__symbolic":"method"}],"setSizes":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"gantt-header","template":"<div class=\"gantt-header\"> <div class=\"gantt-header-title\"> <div style=\"flex:1\">{{ name }}</div> <div>Started: {{ startDate | date: 'medium'}}</div> </div> </div> ","styles":[".gantt-header { background-color: whitesmoke; height: 40px; border-bottom: 1px solid #e0e0e0; } .gantt-header-title { padding: 12px; display: flex; flex-wrap:wrap; font-family: Arial, Helvetica, sans-serif; font-size: 16px; } .gantt-header-actions { display: inline; float: right; padding: 6px; } "]}]}],"members":{"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}],"startDate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"gantt-footer","template":"<div class=\"gantt-footer\"></div> ","styles":[".gantt-footer { background-color: whitesmoke; height: 36px; border-top: 1px solid #e0e0e0; } .gantt-footer-actions { float:right; } "]}]}],"members":{"project":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"gantt-activity-background","template":"<div #bg class=\"gantt_activity_bg\"> <div class=\"gantt_activity_row\" [ngStyle]=\"setRowStyle()\" *ngFor=\"let row of ganttService.groupData(tasks)\"> <div class=\"gantt_activity_cell\" [ngStyle]=\"setCellStyle()\" *ngFor=\"let cell of cells; let l = last\" [ngClass]=\"[(isDayWeekend(cell)) ? 'weekend' : '', l ? 'last_column_cell' : '']\"> </div> </div> </div> ","styles":[".gantt_activity_bg { overflow: hidden; } .gantt_activity_row { border-bottom: 1px solid #ebebeb; background-color: #fff; box-sizing: border-box; } .gantt_activity_cell { display: inline-block; height: 100%; border-right: 1px solid #ebebeb; } .weekend { background-color:whitesmoke; } "]}]}],"members":{"tasks":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"timeScale":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"zoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"zoomLevel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":3}}]}],"bg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":27,"character":3},"arguments":["bg"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"GanttService"}]}],"ngOnInit":[{"__symbolic":"method"}],"isDayWeekend":[{"__symbolic":"method"}],"setRowStyle":[{"__symbolic":"method"}],"setCellStyle":[{"__symbolic":"method"}],"drawGrid":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"gantt-activity-bars","template":"<div class=\"gantt_activity_bars_area\" [ngStyle]=\"{ 'height': containerHeight + 'px', 'width': containerWidth + 'px' }\"> <div #bar class=\"gantt_activity_line\" *ngFor=\"let task of ganttService.groupData(tasks); let i = index\" [ngStyle]=\"drawBar(task, i)\"> <div class=\"gantt_activity_progress\" [ngStyle]=\"drawProgress(task, bar)\"></div> <div class=\"gantt_activity_progress_drag\" style=\"left: 518px\"></div> <div class=\"gantt_activity_content\"></div> <div class=\"gantt_activity_link_control gantt_activity_right {{ resizable }}\" style=\"height: 26px; line-height: 30px\"> <div class=\"gantt_link_point\"></div> </div> <div class=\"gantt_activity_link_control gantt_activity_left {{ resizable }}\" style=\"height: 26px; line-height: 30px\"> <div class=\"gantt_link_point\"></div> </div> </div> </div> ","styles":[".gantt_activity_line { /*border-radius: 2px;*/ position: absolute; box-sizing: border-box; background-color: rgb(18,195,244); border: 1px solid #2196F3; -webkit-user-select: none; } .gantt_activity_line:hover { /*cursor: move;*/ } .gantt_activity_progress { text-align: center; z-index: 0; background: #2196F3; position: absolute; min-height: 18px; display: block; height: 18px; } .gantt_activity_progress_drag { height: 8px; width: 8px; bottom: -4px; margin-left: 4px; background-position: bottom; background-image: \"\"; background-repeat: no-repeat; z-index: 2; } .gantt_activity_content { font-size: 12px; color: #fff; width: 100%; top: 0; position: absolute; white-space: nowrap; text-align: center; line-height: inherit; overflow: hidden; height: 100%; } .gantt_activity_link_control { position: absolute; width: 13px; top: 0; } .gantt_activity_right { right: 0; } .gantt_activity_left { left: 0; } .gantt_activity_right.resizable:hover { cursor:w-resize; } .gantt_activity_left.resizable:hover { cursor:w-resize; } "]}]}],"members":{"timeScale":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"dimensions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"tasks":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"zoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"zoomLevel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"GanttService"}]}],"ngOnInit":[{"__symbolic":"method"}],"expandLeft":[{"__symbolic":"method"}],"expandRight":[{"__symbolic":"method"}],"move":[{"__symbolic":"method"}],"drawBar":[{"__symbolic":"method"}],"drawProgress":[{"__symbolic":"method"}],"addMouseEventListeners":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"gantt-time-scale","template":"<div class=\"time_scale\" [ngStyle]=\"setTimescaleStyle()\"> <div class=\"time_scale_line\" [ngStyle]=\"setTimescaleLineStyle('none')\"> <div class=\"time_scale_cell\" *ngFor=\"let date of timeScale\" [ngStyle]=\"setTimescaleCellStyle()\" [ngClass]=\"(isDayWeekend(date)) ? 'weekend' : ''\">{{date | date: 'dd-MM-yyyy'}}</div> </div> <div *ngIf=\"zoomLevel === 'hours'\" class=\"time_scale_line\" [ngStyle]=\"setTimescaleLineStyle('1px solid #cecece')\"> <div class=\"time_scale_cell\" *ngFor=\"let hour of getHours()\" [ngStyle]=\"{ 'width': ganttService.hourCellWidth + 'px' }\">{{hour}}</div> </div> </div> ","styles":[".weekend { background-color: whitesmoke; } .time_scale { font-size: 12px; border-bottom: 1px solid #cecece; background-color: #fff; } .time_scale_line { box-sizing: border-box; } .time_scale_line:first-child { border-top: none; } .time_scale_cell { display: inline-block; white-space: nowrap; overflow: hidden; border-right: 1px solid #cecece; text-align: center; height: 100%; } "]}]}],"members":{"timeScale":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"dimensions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"zoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"zoomLevel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"GanttService"}]}],"ngOnInit":[{"__symbolic":"method"}],"setTimescaleStyle":[{"__symbolic":"method"}],"setTimescaleLineStyle":[{"__symbolic":"method"}],"setTimescaleCellStyle":[{"__symbolic":"method"}],"isDayWeekend":[{"__symbolic":"method"}],"getHours":[{"__symbolic":"method"}]}}},"origins":{"GanttModule":"./index","GanttComponent":"./gantt/gantt.component","GroupByPipe":"./group-by.pipe","GanttService":"./gantt.service","ɵa":"./gantt-activity/gantt-activity.component","ɵb":"./gantt-header/gantt-header.component","ɵc":"./gantt-footer/gantt-footer.component","ɵd":"./gantt-activity-background/gantt-activity-background.component","ɵe":"./gantt-activity-bars/gantt-activity-bars.component","ɵf":"./gantt-time-scale/gantt-time-scale.component"},"importAs":"angular-gantt"}